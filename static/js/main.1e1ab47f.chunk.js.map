{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cartSlice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/uiSlice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","App.js","store/cartActions.js","store/store.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalAmount","totalQuantity","postRequestIsNeeded","reducers","updatedReduxStore","state","action","payload","addItemToCart","price","existingItem","find","el","id","totalPrice","quantity","push","title","removeItemFromCart","filter","cartActions","actions","CartItem","item","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","useSelector","cart","motion","div","initial","y","animate","map","uiSlice","cartIsShown","toggleCart","uiActions","CartButton","button","badge","MainHeader","header","Layout","ProductItem","description","dummyProducts","Products","products","App","ui","useEffect","a","fetchData","fetch","response","ok","Error","json","data","console","log","method","body","JSON","stringify","headers","message","sendPostRequest","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e1ab47f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__2N5Aj\",\"details\":\"CartItem_details__1-rwW\",\"quantity\":\"CartItem_quantity__3ZMDg\",\"price\":\"CartItem_price__2RSJf\",\"itemprice\":\"CartItem_itemprice__1MO55\",\"actions\":\"CartItem_actions__RpbTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__envhn\",\"price\":\"ProductItem_price__2xRqC\",\"actions\":\"ProductItem_actions__3Uu04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__11IRY\",\"badge\":\"CartButton_badge__uWpzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3E8Qm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__2jcqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__2AYlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__2IA8m\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalAmount: 0,\r\n        totalQuantity:0,\r\n        postRequestIsNeeded: false\r\n    },\r\n    reducers: {\r\n        updatedReduxStore(state, action) {\r\n            state.items = action.payload.items;\r\n            state.totalAmount = action.payload.totalAmount;\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n        },\r\n        addItemToCart(state, action) {\r\n            state.totalAmount = state.totalAmount + action.payload.price\r\n            state.totalQuantity++;\r\n            const existingItem = state.items.find(el => el.id === action.payload.id)\r\n            if (existingItem) {\r\n                existingItem.totalPrice = existingItem.totalPrice + action.payload.price\r\n                existingItem.quantity++;\r\n            } else {\r\n                state.items.push({\r\n                    id: action.payload.id,\r\n                    title: action.payload.title,\r\n                    price: action.payload.price,\r\n                    quantity: 1,\r\n                    totalPrice: action.payload.price\r\n                })\r\n            }\r\n            state.postRequestIsNeeded = true\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const existingItem = state.items.find(el => el.id === action.payload)\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(el => el.id !== action.payload)\r\n            } else {\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n                existingItem.quantity--;\r\n            }\r\n            state.totalAmount = state.totalAmount - existingItem.price\r\n            state.totalQuantity--;\r\n            state.postRequestIsNeeded = true\r\n        }\r\n    }\r\n})\r\n\r\nexport const cartActions = cartSlice.actions\r\n\r\nexport default cartSlice","import { cartActions } from '../../store/cartSlice';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classes from './CartItem.module.css';\n\n\nconst CartItem = (props) => {\n  const { title, quantity, totalPrice, price, id } = props.item;\n  const dispatch = useDispatch()\n\n  const addItemToCartHandler = () => {\n      dispatch(cartActions.addItemToCart({\n        id, title, price\n      }))\n  }\n\n  const removeItemFromCartHandler = () => {\n      dispatch(cartActions.removeItemFromCart(id))\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${totalPrice.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/набор)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemFromCartHandler}>-</button>\n          <button onClick={addItemToCartHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nCartItem.propTypes = {\n  item: PropTypes.object\n};\n\n\nexport default CartItem;\n","import Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport { useSelector } from 'react-redux';\nimport {motion} from 'framer-motion';\n\nconst Cart = () => {\n\n  const items = useSelector(state => state.cart.items)\n\n  return (\n    <motion.div initial={{y: '-100vh'}} animate={{y:0}}>\n    <Card className={classes.cart}>\n      <h2>Ваши покупки</h2>\n      <ul>  \n        {items.map(el => {\n          return <CartItem\n          key={el.id}\n          item={{id: el.id, title: el.title, quantity: el.quantity, totalPrice: el.totalPrice, price: el.price }}\n        />\n        })}\n      </ul>\n    </Card>\n    </motion.div>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: {\r\n        cartIsShown: false\r\n    },\r\n    reducers: {\r\n        toggleCart(state,action) {\r\n            state.cartIsShown = !state.cartIsShown\r\n        }\r\n    }\r\n})\r\n\r\nexport const uiActions = uiSlice.actions\r\n\r\n\r\nexport default uiSlice\r\n\r\n\r\n\r\n","import classes from './CartButton.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {uiActions} from '../../store/uiSlice'\n\nconst CartButton = () => {\n  const dispatch = useDispatch()\n  const totalQuantity = useSelector(state => state.cart.totalQuantity)\n\n  const onCartHandler = () => {\n      dispatch(uiActions.toggleCart())\n  }\n\n  return (\n    <button className={classes.button} onClick={onCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { cartActions } from '../../store/cartSlice';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst ProductItem = (props) => {\n  const { title, price, description, id } = props;\n\n  const dispatch = useDispatch();\n\n  const addToCartHandler = () => {\n     dispatch(cartActions.addItemToCart({\n       id, title, price\n     }))\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Добавить в корзину</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nProductItem.propTypes = {\n  title: PropTypes.string,\n  price: PropTypes.number,\n  description: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst dummyProducts = [\n  {id: 'm1', title: 'Суши Филадельфия', price: 10, description: 'Возможно лучшие суши в мире'},\n  {id: 'm2', title: 'Суши калифорния', price: 20, description: 'Тоже неплохие суши'},\n\n]\n\nconst Products = () => {\n  return (\n    <section className={classes.products}>\n      <h2>Выбирайте Ваши любимые суши</h2>\n      <ul>\n        {dummyProducts.map(el => {\n          return <ProductItem\n          key={el.id}\n          id={el.id}\n          title={el.title}\n          price={el.price}\n          description={el.description}\n        />\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import {useEffect} from 'react'\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport {useSelector, useDispatch} from 'react-redux'\nimport {sendPostRequest, sendGetRequest} from './store/cartActions'\n\n\nfunction App() {\n  \n  const dispatch = useDispatch()\n  const cartIsShown = useSelector(state => state.ui.cartIsShown)\n  const cart = useSelector(state => state.cart)\n\n\n  useEffect(() => {\n    \n    dispatch(sendGetRequest())\n\n  }, [dispatch])\n\n  useEffect(() => {\n\n\n    if (cart.postRequestIsNeeded) {\n\n      dispatch(sendPostRequest(cart))\n    }\n  }, [cart, dispatch])\n\n\n\n  return (\n    <Layout>\n      {cartIsShown && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n","import { cartActions } from \"./cartSlice\"\r\n\r\nexport const sendPostRequest = (cart) => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch(`https://react-app5-default-rtdb.firebaseio.com/sushi.json`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(cart),\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error('Data sending to DB is failed')\r\n            }\r\n        } \r\n        try {\r\n            await fetchData()\r\n        } catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendGetRequest = () => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch(`https://react-app5-default-rtdb.firebaseio.com/sushi.json`)\r\n            if (!response.ok) {\r\n                throw new Error('Data loading is failed')\r\n            }\r\n            const data = await response.json();\r\n            dispatch(cartActions.updatedReduxStore({\r\n                items: data.items || [],\r\n                totalQuantity: data.totalQuantity,\r\n                totalAmount: data.totalAmount\r\n            }))\r\n        }\r\n\r\n        try {\r\n            await fetchData()\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }   \r\n}","import { configureStore } from '@reduxjs/toolkit'\r\nimport cartSlice from './cartSlice'\r\nimport uiSlice from './uiSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        cart: cartSlice.reducer,\r\n        ui: uiSlice.reducer\r\n    },\r\n  })\r\n\r\n\r\n  ","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}